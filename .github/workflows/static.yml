# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just uploading static files
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Prepare web assets only
        run: |
          # Create deployment directory with only web assets
          mkdir -p _site

          # Copy main web files
          cp index.html _site/
          cp -r assets/ _site/assets/
          cp .nojekyll _site/

          # Copy config directory for production
          cp -r config/ _site/config/

                    # Create production config override with secrets
          ELASTICSEARCH_COOKIE="${{ secrets.ELASTICSEARCH_COOKIE }}"
          SKIP_COOKIE_PROMPT="false"

          # Check if cookie is available and not empty
          if [ -n "$ELASTICSEARCH_COOKIE" ] && [ "$ELASTICSEARCH_COOKIE" != "" ]; then
            SKIP_COOKIE_PROMPT="true"
            echo "🔐 Auto-authentication enabled"
          else
            echo "🔐 No auto-authentication - cookie prompt will be shown"
          fi

          cat > _site/config/production.json << EOF
          {
            "environment": "production",
            "baseUrl": "https://balkhalil-godaddy.github.io/vh-rad-traffic-monitor",
            "corsProxy": {
              "enabled": true,
              "url": "https://regal-youtiao-09c777.netlify.app/.netlify/functions/proxy",
              "fallbackToDirect": true,
              "message": "Using serverless proxy to avoid CORS issues"
            },
            "elasticsearch": {
              "directConnection": false,
              "url": "https://usieventho-prod-usw2.kb.us-west-2.aws.found.io:9243",
              "path": "/api/console/proxy?path=traffic-*/_search&method=POST",
              "preConfiguredCookie": "$ELASTICSEARCH_COOKIE"
            },
            "features": {
              "fastapi": false,
              "localServer": false,
              "corsProxy": true,
              "proxyFallback": true,
              "autoAuthentication": true
            },
            "dashboard": {
              "autoLoadCookie": true,
              "skipCookiePrompt": $SKIP_COOKIE_PROMPT
            }
          }
          EOF

          # Copy any other static files that might be needed
          if [ -f favicon.ico ]; then cp favicon.ico _site/; fi
          if [ -f robots.txt ]; then cp robots.txt _site/; fi
          if [ -d examples ]; then cp -r examples/ _site/examples/; fi

          # List what we're deploying
          echo "Files being deployed:"
          find _site -type f | head -30

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload only the prepared web assets
          path: "_site"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
