(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const u of o.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&c(u)}).observe(document,{childList:!0,subtree:!0});function n(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function c(e){if(e.ep)return;e.ep=!0;const o=n(e);fetch(e.href,o)}})();const a=s=>{let t;const n=new Set,c=(r,f)=>{const i=typeof r=="function"?r(t):r;if(!Object.is(i,t)){const p=t;t=f??(typeof i!="object"||i===null)?i:Object.assign({},t,i),n.forEach(m=>m(t,p))}},e=()=>t,l={setState:c,getState:e,getInitialState:()=>d,subscribe:r=>(n.add(r),()=>n.delete(r))},d=t=s(c,e,l);return l},g=s=>s?a(s):a;export{g as c};
