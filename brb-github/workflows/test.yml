name: Essential Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  essential-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Check critical files exist
        run: |
          echo "Checking critical files..."
          test -f cors_proxy.py
          test -f scripts/generate_dashboard_refactored.sh
          test -f run_with_cors.sh

      - name: Check script permissions
        run: |
          echo "Checking script permissions..."
          test -x scripts/generate_dashboard_refactored.sh
          test -x run_with_cors.sh
          test -x test_locally.sh

      - name: Validate Python syntax
        run: |
          echo "Validating Python syntax..."
          python3 -m py_compile cors_proxy.py

      - name: Test dashboard generation
        env:
          ELASTIC_COOKIE: test_cookie_for_ci
        run: |
          chmod +x scripts/generate_dashboard_refactored.sh
          ./scripts/generate_dashboard_refactored.sh || echo "Dashboard generation failed but continuing..."
          test -f index.html

      - name: Upload dashboard artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: dashboard-output
          path: |
            index.html
            data/

      - name: Check HTML output
        run: |
          if [ -f index.html ]; then
            echo "Dashboard size: $(wc -c < index.html) bytes"
            echo "First 500 chars:"
            head -c 500 index.html
          else
            echo "No index.html found"
          fi

          # Check for absolute paths (common mistake)
          if grep -E 'href="/|src="/' index.html 2>/dev/null; then
            echo "ERROR: Found absolute paths in index.html"
            exit 1
          fi

      - name: Quick Python tests
        run: |
          # Only run if test files exist
          if [ -f "tests/requirements.txt" ]; then
            pip install -r tests/requirements.txt
            # Only test critical components
            python -m pytest tests/test_cors_proxy.py::test_cors_headers -v || true
            python -m pytest tests/test_github_pages_integration.py::test_critical_files_exist -v || true
          else
            echo "Skipping Python tests (no requirements.txt)"
          fi
